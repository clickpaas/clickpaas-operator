/*
Copyright The clickpaas-controller Authors.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "l0calh0st.cn/clickpaas-operator/pkg/apis/middleware/v1alpha1"
)

// MysqlClusterLister helps list MysqlClusters.
// All objects returned here must be treated as read-only.
type MysqlClusterLister interface {
	// List lists all MysqlClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MysqlCluster, err error)
	// MysqlClusters returns an object that can list and get MysqlClusters.
	MysqlClusters(namespace string) MysqlClusterNamespaceLister
	MysqlClusterListerExpansion
}

// mysqlClusterLister implements the MysqlClusterLister interface.
type mysqlClusterLister struct {
	indexer cache.Indexer
}

// NewMysqlClusterLister returns a new MysqlClusterLister.
func NewMysqlClusterLister(indexer cache.Indexer) MysqlClusterLister {
	return &mysqlClusterLister{indexer: indexer}
}

// List lists all MysqlClusters in the indexer.
func (s *mysqlClusterLister) List(selector labels.Selector) (ret []*v1alpha1.MysqlCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MysqlCluster))
	})
	return ret, err
}

// MysqlClusters returns an object that can list and get MysqlClusters.
func (s *mysqlClusterLister) MysqlClusters(namespace string) MysqlClusterNamespaceLister {
	return mysqlClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MysqlClusterNamespaceLister helps list and get MysqlClusters.
// All objects returned here must be treated as read-only.
type MysqlClusterNamespaceLister interface {
	// List lists all MysqlClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MysqlCluster, err error)
	// Get retrieves the MysqlCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MysqlCluster, error)
	MysqlClusterNamespaceListerExpansion
}

// mysqlClusterNamespaceLister implements the MysqlClusterNamespaceLister
// interface.
type mysqlClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MysqlClusters in the indexer for a given namespace.
func (s mysqlClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MysqlCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MysqlCluster))
	})
	return ret, err
}

// Get retrieves the MysqlCluster from the indexer for a given namespace and name.
func (s mysqlClusterNamespaceLister) Get(name string) (*v1alpha1.MysqlCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mysqlcluster"), name)
	}
	return obj.(*v1alpha1.MysqlCluster), nil
}
