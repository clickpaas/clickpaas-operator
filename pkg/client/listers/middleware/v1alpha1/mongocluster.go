/*
Copyright The clickpaas-controller Authors.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "l0calh0st.cn/clickpaas-operator/pkg/apis/middleware/v1alpha1"
)

// MongoClusterLister helps list MongoClusters.
// All objects returned here must be treated as read-only.
type MongoClusterLister interface {
	// List lists all MongoClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MongoCluster, err error)
	// MongoClusters returns an object that can list and get MongoClusters.
	MongoClusters(namespace string) MongoClusterNamespaceLister
	MongoClusterListerExpansion
}

// mongoClusterLister implements the MongoClusterLister interface.
type mongoClusterLister struct {
	indexer cache.Indexer
}

// NewMongoClusterLister returns a new MongoClusterLister.
func NewMongoClusterLister(indexer cache.Indexer) MongoClusterLister {
	return &mongoClusterLister{indexer: indexer}
}

// List lists all MongoClusters in the indexer.
func (s *mongoClusterLister) List(selector labels.Selector) (ret []*v1alpha1.MongoCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongoCluster))
	})
	return ret, err
}

// MongoClusters returns an object that can list and get MongoClusters.
func (s *mongoClusterLister) MongoClusters(namespace string) MongoClusterNamespaceLister {
	return mongoClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MongoClusterNamespaceLister helps list and get MongoClusters.
// All objects returned here must be treated as read-only.
type MongoClusterNamespaceLister interface {
	// List lists all MongoClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MongoCluster, err error)
	// Get retrieves the MongoCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MongoCluster, error)
	MongoClusterNamespaceListerExpansion
}

// mongoClusterNamespaceLister implements the MongoClusterNamespaceLister
// interface.
type mongoClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MongoClusters in the indexer for a given namespace.
func (s mongoClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MongoCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongoCluster))
	})
	return ret, err
}

// Get retrieves the MongoCluster from the indexer for a given namespace and name.
func (s mongoClusterNamespaceLister) Get(name string) (*v1alpha1.MongoCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mongocluster"), name)
	}
	return obj.(*v1alpha1.MongoCluster), nil
}
